name: Docker Image CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write   # for provenance attestations

env:
  IMAGE_NAME: roon-server
  REGISTRY: docker.io
  NAMESPACE: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Set build date for image tagging
        id: date
        run: echo "image_date=$(date +'%Y.%m.%d')" >> "$GITHUB_OUTPUT"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        # always publish a sha tag
        # date tag on push or release
        # latest on push to main or release
        # release tag on release
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=${{ steps.date.outputs.image_date }},enable=${{ github.event_name != 'pull_request' }}
            type=raw,value=latest,enable=${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'release' }}
            type=raw,value=${{ github.event.release.tag_name }},enable=${{ github.event_name == 'release' }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build (push on push/release)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true

      - name: Validate docker-compose
        run: docker compose -f docker-compose.yml config

  # update README on release publish
  dockerhub-readme:
      if: github.event_name == 'release'
      needs: build-and-push
      runs-on: ubuntu-24.04
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Update Docker Hub README
          uses: peter-evans/dockerhub-description@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
            repository: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
            readme-filepath: ./README.md
            short-description: ${{ github.event.repository.description }}
